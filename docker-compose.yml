version: "3.8"
services:
  yunga:
    image: node:10-alpine
    hostname: yunga
    container_name: yunga
    restart: unless-stopped
    command: sh -c "npm i && npm run start"
    ports:
      - "3000:3000"
    working_dir: /app
    volumes:
      - ./:/app
    environment:
      - PORT:3000
    depends_on:
      - mosquitto
    networks:
      - yunga-network

  #MQTT With mosquitto
  mosquitto:
    image: eclipse-mosquitto
    hostname: mosquitto
    container_name: mosquitto
    restart: unless-stopped
    expose:
      - "1883"
      - "9001"
    volumes:
      - mosquitto-data:/mosquitto/data
      - mosquitto-logs:/mosquitto/logs
      - mosquitto-conf:/mosquitto/config
    networks:
      - yunga-network
      - traefik-net
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.mqtt.rule=HostSNI(`*`)"
      - "traefik.tcp.services.mqtt.loadbalancer.server.port=1883"
      - "traefik.tcp.routers.mqtt.entrypoints=mqtt"
      - "traefik.http.services.mqtt.loadbalancer.server.port=9001"
      - "traefik.docker.network=traefik-net"

  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d/
    depends_on:
      - yunga
    networks:
      - yunga-network

  traefik:
    image: "traefik:v2.2"
    container_name: "traefik"
    command:
      - "--providers.docker=true"
      - "--entrypoints.mqtt.address=:1883"
    ports:
      - "1883:1883"
    networks:
      - traefik-net
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
volumes:
  mosquitto-data:
  mosquitto-logs:
  mosquitto-conf:
  web-root:
networks:
  yunga-network:
    driver: bridge
  traefik-net:
    driver: bridge
